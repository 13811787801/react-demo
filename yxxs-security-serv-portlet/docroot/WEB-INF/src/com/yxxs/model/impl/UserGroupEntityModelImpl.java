/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 * 
 * This library is free software; you can redistribute it and/or modify it under the terms of the
 * GNU Lesser General Public License as published by the Free Software Foundation; either version
 * 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 */

package com.yxxs.model.impl;

import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;

import com.yxxs.common.service.BaseModelImpl;

import com.yxxs.model.UserGroupEntity;
import com.yxxs.model.UserGroupEntityModel;

import org.codehaus.jackson.annotate.JsonIgnore;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;

/**
 * The base model implementation for the UserGroupEntity service. Represents a row in the
 * &quot;yxxs_sec_user_group&quot; database table, with each column mapped to a property of this
 * class.
 * 
 * <p>
 * This implementation and its corresponding interface {@link com.yxxs.model.UserGroupEntityModel}
 * exist only as a container for the default property accessors generated by ServiceBuilder. Helper
 * methods and all application logic should be put in {@link UserGroupEntityImpl}.
 * </p>
 * 
 * @author Administrator
 * @see UserGroupEntityImpl
 * @see com.yxxs.model.UserGroupEntity
 * @see com.yxxs.model.UserGroupEntityModel
 * @generated
 */
@JSON(strict = true)
public class UserGroupEntityModelImpl extends BaseModelImpl<UserGroupEntity>
    implements
      UserGroupEntityModel {
  /*
   * NOTE FOR DEVELOPERS:
   * 
   * Never modify or reference this class directly. All methods that expect a user group entity
   * model instance should use the {@link com.yxxs.model.UserGroupEntity} interface instead.
   */
  public static final String TABLE_NAME = "yxxs_sec_user_group";
  public static final Object[][] TABLE_COLUMNS = { {"id_", Types.BIGINT},
      {"user_id", Types.BIGINT}, {"group_id", Types.BIGINT}, {"user_type", Types.INTEGER},
      {"flag", Types.INTEGER}, {"update_date", Types.TIMESTAMP}, {"end_date", Types.TIMESTAMP},
      {"start_date", Types.TIMESTAMP}};
  public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
      com.yxxs.common.util.BaseServicePropsUtil
          .get("value.object.entity.cache.enabled.com.yxxs.model.UserGroupEntity"), true);
  public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
      com.yxxs.common.util.BaseServicePropsUtil
          .get("value.object.finder.cache.enabled.com.yxxs.model.UserGroupEntity"), true);
  public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
      com.yxxs.common.util.BaseServicePropsUtil
          .get("value.object.column.bitmask.enabled.com.yxxs.model.UserGroupEntity"), true);
  public static long GROUP_ID_COLUMN_BITMASK = 1L;
  public static long USER_ID_COLUMN_BITMASK = 2L;
  public static long USER_TYPE_COLUMN_BITMASK = 4L;

  public UserGroupEntityModelImpl() {}

  public long getPrimaryKey() {
    return _id_;
  }

  public void setPrimaryKey(long primaryKey) {
    setId(primaryKey);
  }

  @JsonIgnore
  public Serializable getPrimaryKeyObj() {
    return new Long(_id_);
  }

  public void setPrimaryKeyObj(Serializable primaryKeyObj) {
    setPrimaryKey(((Long) primaryKeyObj).longValue());
  }

  @JsonIgnore
  public Class<?> getModelClass() {
    return UserGroupEntity.class;
  }

  @JsonIgnore
  public String getModelClassName() {
    return UserGroupEntity.class.getName();
  }

  @JSON
  public long getId() {
    return _id_;
  }

  public void setId(long id) {
    this._id_ = id;
  }

  @JSON
  public long getUser_id() {
    return _user_id;
  }

  public void setUser_id(long user_id) {
    if (!_setOriginalUser_id) {
      _setOriginalUser_id = true;

      _originalUser_id = _user_id;
    }

    this._user_id = user_id;
  }

  @JsonIgnore
  public long getOriginalUser_id() {
    return _originalUser_id;
  }

  @JSON
  public long getGroup_id() {
    return _group_id;
  }

  public void setGroup_id(long group_id) {
    if (!_setOriginalGroup_id) {
      _setOriginalGroup_id = true;

      _originalGroup_id = _group_id;
    }

    this._group_id = group_id;
  }

  @JsonIgnore
  public long getOriginalGroup_id() {
    return _originalGroup_id;
  }

  @JSON
  public int getUser_type() {
    return _user_type;
  }

  public void setUser_type(int user_type) {
    if (!_setOriginalUser_type) {
      _setOriginalUser_type = true;

      _originalUser_type = _user_type;
    }

    this._user_type = user_type;
  }

  @JsonIgnore
  public int getOriginalUser_type() {
    return _originalUser_type;
  }

  @JSON
  public int getFlag() {
    return _flag;
  }

  public void setFlag(int flag) {
    this._flag = flag;
  }

  @JSON
  public Date getUpdate_date() {
    return _update_date;
  }

  public void setUpdate_date(Date update_date) {
    this._update_date = update_date;
  }

  @JSON
  public Date getEnd_date() {
    return _end_date;
  }

  public void setEnd_date(Date end_date) {
    this._end_date = end_date;
  }

  @JSON
  public Date getStart_date() {
    return _start_date;
  }

  public void setStart_date(Date start_date) {
    this._start_date = start_date;
  }

  @JsonIgnore
  public long getColumnBitmask() {
    return 0L;
  }

  @Override
  public UserGroupEntity toEscapedModel() {
    return null;
  }

  @Override
  public Object clone() {
    UserGroupEntityImpl userGroupEntityImpl = new UserGroupEntityImpl();

    userGroupEntityImpl.setId(getId());
    userGroupEntityImpl.setUser_id(getUser_id());
    userGroupEntityImpl.setGroup_id(getGroup_id());
    userGroupEntityImpl.setUser_type(getUser_type());
    userGroupEntityImpl.setFlag(getFlag());
    userGroupEntityImpl.setUpdate_date(getUpdate_date());
    userGroupEntityImpl.setEnd_date(getEnd_date());
    userGroupEntityImpl.setStart_date(getStart_date());

    userGroupEntityImpl.resetOriginalValues();

    return userGroupEntityImpl;
  }

  public int compareTo(UserGroupEntity userGroupEntity) {
    long primaryKey = userGroupEntity.getPrimaryKey();

    if (getPrimaryKey() < primaryKey) {
      return -1;
    } else if (getPrimaryKey() > primaryKey) {
      return 1;
    } else {
      return 0;
    }
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == null) {
      return false;
    }

    UserGroupEntity userGroupEntity = null;

    try {
      userGroupEntity = (UserGroupEntity) obj;
    } catch (ClassCastException cce) {
      return false;
    }

    long primaryKey = userGroupEntity.getPrimaryKey();

    if (getPrimaryKey() == primaryKey) {
      return true;
    } else {
      return false;
    }
  }

  @Override
  public int hashCode() {
    return (int) getPrimaryKey();
  }

  @Override
  public void resetOriginalValues() {
    UserGroupEntityModelImpl userGroupEntityModelImpl = this;

    userGroupEntityModelImpl._originalUser_id = userGroupEntityModelImpl._user_id;

    userGroupEntityModelImpl._setOriginalUser_id = false;

    userGroupEntityModelImpl._originalGroup_id = userGroupEntityModelImpl._group_id;

    userGroupEntityModelImpl._setOriginalGroup_id = false;

    userGroupEntityModelImpl._originalUser_type = userGroupEntityModelImpl._user_type;

    userGroupEntityModelImpl._setOriginalUser_type = false;
  }

  public HashMap toHash() {
    HashMap hash = new HashMap();

    hash.put("id", getId());
    hash.put("user_id", getUser_id());
    hash.put("group_id", getGroup_id());
    hash.put("user_type", getUser_type());
    hash.put("flag", getFlag());
    hash.put("update_date", getUpdate_date());
    hash.put("end_date", getEnd_date());
    hash.put("start_date", getStart_date());

    return hash;
  }

  private long _id_;
  private long _user_id;
  private long _originalUser_id;
  private boolean _setOriginalUser_id;
  private long _group_id;
  private long _originalGroup_id;
  private boolean _setOriginalGroup_id;
  private int _user_type;
  private int _originalUser_type;
  private boolean _setOriginalUser_type;
  private int _flag;
  private Date _update_date;
  private Date _end_date;
  private Date _start_date;
}
